buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
    }
}

plugins {
    id 'java'
    id 'maven'
    id 'signing'
}

apply plugin: 'io.codearte.nexus-staging'

group 'io.codemonastery'
version readVersion()
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

task wrapper(type: Wrapper) {
  gradleVersion = '2.7'
  distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

sourceCompatibility = 1.8

//custom tasks
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

//configure plugins
repositories {
    mavenCentral()
}
dependencies {
    compile group: 'io.dropwizard', name: 'dropwizard-core', version: '0.8.4'
    compile group: 'com.rabbitmq', name:'amqp-client', version: '3.5.6'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}   
artifacts {
    archives javadocJar, sourcesJar
}
signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}
uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: getPropertyOrEmpty("ossrhUser"), password: getPropertyOrEmpty("ossrhPassword"))
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: getPropertyOrEmpty("ossrhUser"), password: getPropertyOrEmpty("ossrhPassword"))
            }

            pom.project {
                name 'Dropwizard RabbitMQ'
                packaging 'jar'
                description 'RabbitMQ integration for common uses in Dropwizard'
                url 'https://github.com/code-monastery/dropwizard-rabbitmq'

                scm {
                    connection 'scm:git@github.com:code-monastery/dropwizard-rabbitmq.git'
                    developerConnection 'scm:git@github.com:code-monastery/dropwizard-rabbitmq.git'
                    url 'http://foo.googlecode.com/svn/trunk/'
                }

                licenses {
                    license {
                        name 'CC0 1.0 Universal'
                        url 'https://creativecommons.org/publicdomain/zero/1.0/'
                    }
                }

                developers {
                    developer {
                        id 'randyp'
                        name 'Randy Pensinger'
                        email 'rspensinger@gmail.com'
                    }
                }
            }
        }
    }
}

//utility functions
def getPropertyOrEmpty(propertyName){
    if(project.hasProperty(propertyName)){
        return project.getProperty(propertyName);
    }
    return "";
}

def readVersion(){
    return new File('VERSION').getText('UTF-8')
}
